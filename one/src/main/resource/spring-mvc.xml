<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<mvc:annotation-driven >  
		 <mvc:argument-resolvers>
  			<bean class="com.hd.framework.resolver.CurrentUserArgumentResolver" />
 		 </mvc:argument-resolvers>
	</mvc:annotation-driven>
	<context:component-scan base-package="com.hd.framework.controller" />
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="objectMapper">
     		<bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
							<property name="simpleDateFormat" value="yyyy-MM-dd HH:mm:ss" />
							<property name="failOnEmptyBeans" value="false" />
							<property name="featuresToEnable">
								<array>
									<util:constant static-field="com.fasterxml.jackson.core.JsonParser.Feature.ALLOW_COMMENTS" />
								</array>
							</property>
			</bean>
   		</property>
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />	<!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
<!-- 	<bean -->
<!-- 		class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
<!-- 		<property name="prefix" value="/WEB-INF/jsp/" /> -->
<!-- 		<property name="suffix" value=".jsp" /> -->
<!-- 	</bean> -->
	
	<bean id="freemarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/tpl/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="auto_import">
				include/footer.html as footer,
				include/head.html as head,
				include/header.html as header,
				include/menu.html as menu
				</prop>
				<prop key="default_encoding">UTF-8</prop>
				<!-- int seconds oneDay 86400-->
<!-- 				<prop key="template_update_delay">-1</prop> -->
<!-- 				<prop key="object_wrapper">BeansWrapper(2.3.23, exposeFields=true)</prop> -->
			</props>
		</property>
	</bean>

	<bean id="freemarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass">
			<value>com.hd.framework.view.FreeMarkerView</value>
		</property>
		<property name="cache" value="true" />
		<property name="suffix" value=".html" />
		<property name="contentType" value="text/html; charset=UTF-8" />
	</bean> 

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>


	<mvc:interceptors>    
    <mvc:interceptor>    
        <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->  
        <mvc:mapping path="/user/**" />  
        <bean class="com.hd.framework.interceptors.CommonInterceptor"></bean>    
    </mvc:interceptor>  
    <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->  
	</mvc:interceptors>  
</beans>